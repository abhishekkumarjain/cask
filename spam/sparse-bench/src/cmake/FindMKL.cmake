FIND_PATH(LibMKL_INCLUDE_DIRS mkl_cblas.h /usr/include
                                      /usr/local/include
                                      $ENV{MKL_HOME}/include
                                      $ENV{MKLROOT}/include)

IF( CMAKE_SYSTEM_PROCESSOR STREQUAL "x86_64" )
  GET_FILENAME_COMPONENT(MKL_LIB_PATH ${LibMKL_INCLUDE_DIRS}/../lib/intel64 ABSOLUTE)
ELSE()
  GET_FILENAME_COMPONENT(MKL_LIB_PATH ${LibMKL_INCLUDE_DIRS}/../lib/ia32 ABSOLUTE)
ENDIF()

FIND_LIBRARY( MKL_LAPACK NAMES mkl_lapack PATHS ${MKL_LIB_PATH} )

IF ( MKL_LAPACK_FOUND )
  # old MKL versions
  IF ( CMAKE_SYSTEM_PROCESSOR STREQUAL "x86_64" )
     FIND_LIBRARY( MKL NAMES mkl_ia64 PATHS ${MKL_LIB_PATH} )
  ELSE()
     FIND_LIBRARY( MKL NAMES mkl_ia32 PATHS ${MKL_LIB_PATH} )
  ENDIF()
  FIND_LIBRARY( MKL_GUIDE NAMES guide PATHS ${MKL_LIB_PATH} )
  SET (LibMKL_LIBRARIES ${MKL} ${MKL_LAPACK} ${MKL_GUIDE} )
ELSE ()
  # newer MKL version
  SET (MKL_LAPACK "")
  FIND_LIBRARY(MKL_INTEL NAMES mkl_intel_lp64 PATHS ${MKL_LIB_PATH} )
  FIND_LIBRARY(MKL_SEQUENTIAL NAMES mkl_sequential PATHS ${MKL_LIB_PATH} )
  FIND_LIBRARY(MKL_THREAD NAMES mkl_gnu_thread PATHS ${MKL_LIB_PATH} )
  FIND_LIBRARY(MKL_CORE NAMES mkl_core PATHS ${MKL_LIB_PATH} )
  IF (MKL_THREAD-NOTFOUND)
    SET (LibMKL_LIBRARIES  ${MKL_INTEL} ${MKL_SEQUENTIAL} ${MKL_CORE} )
  ELSE()
    SET (LibMKL_LIBRARIES  ${MKL_INTEL} ${MKL_THREAD} ${MKL_CORE} )
  ENDIF()
ENDIF ()
