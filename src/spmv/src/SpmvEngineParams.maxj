import com.maxeler.maxcompiler.v2.build.EngineParameters;

public class SpmvEngineParams extends EngineParameters {

    // -- Debug flags
    private static final boolean debug = false;
    private static final boolean debugSm = false;
    private static final boolean debugKernel = false;
    private static final boolean debugDecoder = false;
    private static final boolean debugOutputSm = false;

    // -- Design Parameters
    private static final int numPipes = 1;
    private static final int vectorCacheSize = 2 * 1024;
    private static final int inputWidth = 16;
    private static final int maxRows = 50000;

    // -- Build params
    private static final boolean highEffort = true;

    SpmvEngineParams(String... args) {
        super(args);
    }

    @Override
    protected void declarations() {
        declareParam("debug", DataType.BOOL, debug);
        declareParam("debugSm", DataType.BOOL, debugSm);
        declareParam("debugKernel", DataType.BOOL, debugKernel);
        declareParam("debugDecoder", DataType.BOOL, debugDecoder);
        declareParam("debugOutputSm", DataType.BOOL, debugOutputSm);

        declareParam("num_pipes", DataType.INT, numPipes);
        declareParam("input_width", DataType.INT, inputWidth);
        declareParam("cache_size", DataType.INT, vectorCacheSize);
        declareParam("max_rows", DataType.INT, maxRows);

        declareParam("highEffort", DataType.BOOL, highEffort);
    }

    public String getBuildName() {
        String base =
          getMaxFileName() + "_" + getDFEModel() + "_" + getTarget() + "_";
        String params =
          getNumPipes() + "x" +
          getInputWidth() + "p_" +
          getMaxRows() / 1000 + "kmr_" +
          getVectorCacheSize() + "cache";
        return base + params;
    }

    public int getNumPipes() {
        return getParam("num_pipes");
    }

    public int getVectorCacheSize() {
        return getParam("cache_size");
    }

    public int getMaxRows() {
        return getParam("max_rows");
    }

    public int getInputWidth() {
        return getParam("input_width");
    }

    public boolean getDebugKernel() {
        return getParam("debugKernel");
    }

    public boolean getDebugSm() {
        return getParam("debugSm");
    }

    public boolean getDebugDecoder() {
        return getParam("debugDecoder");
    }

    public boolean getDebug() {
        return getParam("debug");
    }

    public boolean getDebugOutputSm() {
        return getParam("debugOutputSm");
    }

    public boolean getHighEffort() {
        return getParam("highEffort");
    }
}
