/***
TODO: Add a descriptive comment!
*/

import com.maxeler.maxcompiler.v2.kernelcompiler.Kernel;
import com.maxeler.maxcompiler.v2.kernelcompiler.KernelParameters;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar;

import com.custom_computing_ic.dfe_snippets.blas.DenseBlasLib;

class ConjugateGradientKernel extends Kernel {

  protected ConjugateGradientKernel(KernelParameters parameters) {
    super(parameters);

    DFEVar n = io.scalarInput("n", dfeUInt(32));
    DFEVar alpha = io.scalarInput("alpha", dfeFloat(11, 53));

    DFEVar x = io.input("x", dfeFloat(11, 53));
    DFEVar r = io.input("r", dfeFloat(11, 53));
    DFEVar p = io.input("p", dfeFloat(11, 53));
    DFEVar ap = io.input("ap", dfeFloat(11, 53));

    //debug.simPrintf("x: %f\n", x);

    DFEVar newx = x + alpha * p;
    DFEVar newr = r - alpha * ap;

    io.output("xout", newx, dfeFloat(11, 53));
    io.output("newr", newr, dfeFloat(11, 53));
  }
}
